{"version":3,"sources":["components/Dropdown/styles.module.css","components/Dropdown/index.jsx","data/api.js","App.js","helpers.js","index.js"],"names":["module","exports","requestInstance","axios","create","baseURL","interceptors","response","use","error","Promise","reject","getRequestInstance","Dropdown","props","label","url","name","onFilterChange","query","useState","items","setItems","loading","setLoading","useEffect","get","then","data","catch","fetchList","res","className","styles","disabled","classNames","select","value","onChange","e","target","map","i","key","id","slug","defaultProps","dropdownsArray","withRouter","history","pathname","replacedPathname","replace","queryString","parse","mapValues","pathnameToQuery","location","updateFilter","preparedPathname","stringify","queryToPathname","ReactDOM","render","document","getElementById"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,OAAS,uBAAuB,QAAU,0B,mPCKpFC,ECJ4B,WAChC,IAAMA,EAAkBC,IAAMC,OAAO,CACnCC,QAAS,8CAYX,OATAH,EAAgBI,aAAaC,SAASC,KACpC,SAAAD,GACE,OAAOA,KAET,SAAAE,GACE,OAAOC,QAAQC,OAAOF,MAInBP,EDVeU,GASlBC,EAAW,SAAAC,GAAU,IACjBC,EAA4CD,EAA5CC,MAAOC,EAAqCF,EAArCE,IAAKC,EAAgCH,EAAhCG,KAAMC,EAA0BJ,EAA1BI,eAAgBC,EAAUL,EAAVK,MADlB,EAGEC,mBAAS,IAHX,mBAGjBC,EAHiB,KAGVC,EAHU,OAIMF,oBAAS,GAJf,mBAIjBG,EAJiB,KAIRC,EAJQ,KAqBxB,OAfAC,qBAAU,WACJT,IACFQ,GAAW,GAfQ,SAAAR,GACvB,OAAOd,EACJwB,IAAIV,GACJW,MAAK,qBAAGC,KAAQA,QAChBC,OAAM,SAAApB,GAAK,OAAIC,QAAQC,OAAOF,MAY7BqB,CAAUd,GACPW,MAAK,SAAAI,GACJT,EAASS,GACTP,GAAW,MAEZK,OAAM,SAAApB,GAEL,OADAe,GAAW,GACJd,QAAQC,OAAOF,SAG3B,IAGD,6BACGM,GAAS,0BAAMiB,UAAWC,IAAOlB,OAAQA,GAC1C,4BACEmB,SAAUX,EACVS,UAAWG,IAAWF,IAAOG,OAAR,eAAmBH,IAAOV,QAAUA,IACzDc,MAAOlB,EAAMF,GACbqB,SAAU,SAAAC,GAAC,OAAIrB,EAAeD,EAAMsB,EAAEC,OAAOH,SAE7C,2FACChB,EAAMoB,KAAI,SAAAC,GAAC,OACV,4BAAQC,IAAKD,EAAEE,GAAIP,MAAOK,EAAEG,MACzBH,EAAE3B,aAgBfF,EAASiC,aAAe,GAETjC,Q,+PE3Df,IAAMkC,EAAiB,CACrB,CAAEH,GAAI,EAAG3B,KAAM,IAAKF,MAAO,uCAAUC,IAAK,gBAC1C,CAAE4B,GAAI,EAAG3B,KAAM,IAAKF,MAAO,uCAAUC,IAAK,uBAC1C,CAAE4B,GAAI,EAAG3B,KAAM,KAAMF,MAAO,iCAASC,IAAK,kBA+B7BgC,eA5BH,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACP9B,ECXuB,SAAA+B,GAC7B,IAAMC,EAAmBD,EAASE,QAAQ,KAAM,KAAKA,QAAQ,MAAO,KAC9DjC,EAAQkC,IAAYC,MAAMH,GAChC,OAAOI,oBAAUpC,GAAO,SAAAkB,GAAK,OAAIA,GAASA,EAAMe,QAAQ,KAAM,QDQhDI,CAAgBP,EAAQQ,SAASP,UAEzCQ,EAAe,SAACzC,EAAMoB,GAC1B,IAAMsB,ECRqB,SAAAxC,GAE7B,OADiBkC,IAAYO,UAAUzC,GACvBiC,QAAQ,KAAM,KAAKA,QAAQ,QAAS,KDMzBS,C,yVAAgB,CAAD,GAAM1C,EAAN,eAAcF,EAAOoB,KAC7DY,EAAQG,QAAR,WAAoBO,EAApB,OAEF,OACE,yBAAK3B,UAAU,OACb,wDACCe,EAAeN,KAAI,SAAAC,GAAC,OACnB,kBAAC,EAAD,CACEzB,KAAMyB,EAAEzB,KACRF,MAAO2B,EAAE3B,MACTC,IAAK0B,EAAE1B,IACPE,eAAgBwC,EAChBvC,MAAOA,EACPwB,IAAKD,EAAEE,YExBjBkB,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b5b8eef0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"styles_label__1YxJq\",\"select\":\"styles_select__nqQE4\",\"loading\":\"styles_loading__1PoVI\"};","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport styles from './styles.module.css';\r\nimport { getRequestInstance } from '../../data/api';\r\n\r\nconst requestInstance = getRequestInstance();\r\n\r\nexport const fetchList = url => {\r\n  return requestInstance\r\n    .get(url)\r\n    .then(({ data: { data } }) => data)\r\n    .catch(error => Promise.reject(error));\r\n};\r\n\r\nconst Dropdown = props => {\r\n  const { label, url, name, onFilterChange, query } = props;\r\n\r\n  const [items, setItems] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      setLoading(true);\r\n      fetchList(url)\r\n        .then(res => {\r\n          setItems(res);\r\n          setLoading(false);\r\n        })\r\n        .catch(error => {\r\n          setLoading(false);\r\n          return Promise.reject(error);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {label && <span className={styles.label}>{label}</span>}\r\n      <select\r\n        disabled={loading}\r\n        className={classNames(styles.select, { [styles.loading]: loading })}\r\n        value={query[name]}\r\n        onChange={e => onFilterChange(name, e.target.value)}\r\n      >\r\n        <option>Не выбрано</option>\r\n        {items.map(i => (\r\n          <option key={i.id} value={i.slug}>\r\n            {i.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nDropdown.propTypes = {\r\n  label: PropTypes.string,\r\n  url: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  onFilterChange: PropTypes.func.isRequired,\r\n  query: PropTypes.object.isRequired\r\n};\r\n\r\nDropdown.defaultProps = {};\r\n\r\nexport default Dropdown;\r\n","import axios from 'axios';\r\n\r\nexport const getRequestInstance = () => {\r\n  const requestInstance = axios.create({\r\n    baseURL: 'https://beta.autobooking.com/api/test/v1/'\r\n  });\r\n\r\n  requestInstance.interceptors.response.use(\r\n    response => {\r\n      return response;\r\n    },\r\n    error => {\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  return requestInstance;\r\n};\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport Dropdown from './components/Dropdown';\nimport './App.css';\nimport { pathnameToQuery, queryToPathname } from './helpers';\n\nconst dropdownsArray = [\n  { id: 1, name: 's', label: 'Услуги', url: 'search/terms' },\n  { id: 2, name: 'b', label: 'Бренды', url: 'search/brands_terms' },\n  { id: 3, name: 'st', label: 'Стили', url: 'search/styles' }\n];\n\nconst App = ({ history }) => {\n  const query = pathnameToQuery(history.location.pathname);\n\n  const updateFilter = (name, value) => {\n    const preparedPathname = queryToPathname({ ...query, [name]: value });\n    history.replace(`/${preparedPathname}/`);\n  };\n  return (\n    <div className=\"App\">\n      <h2>The story of 3 dropdowns</h2>\n      {dropdownsArray.map(i => (\n        <Dropdown\n          name={i.name}\n          label={i.label}\n          url={i.url}\n          onFilterChange={updateFilter}\n          query={query}\n          key={i.id}\n        />\n      ))}\n    </div>\n  );\n};\n\nApp.propTypes = {\n  history: PropTypes.object.isRequired\n};\n\nexport default withRouter(App);\n","import queryString from 'query-string';\r\nimport { mapValues } from 'lodash';\r\n\r\nexport const pathnameToQuery = pathname => {\r\n  const replacedPathname = pathname.replace(/-/g, '=').replace(/\\//g, '&');\r\n  const query = queryString.parse(replacedPathname);\r\n  return mapValues(query, value => value && value.replace(/=/g, '-'));\r\n};\r\n\r\nexport const queryToPathname = query => {\r\n  const pathname = queryString.stringify(query);\r\n  return pathname.replace(/=/g, '-').replace(/[&?]/g, '/');\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}